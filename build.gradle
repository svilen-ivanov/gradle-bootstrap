buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

apply plugin: 'java'
apply plugin: 'cobertura'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'

// group is the groupId
group = 'com.miguno.bootstrap.gtm'
//the default artifactId is the project name, which is per default the directory name of the project
version = '1.0.0-SNAPSHOT'

description = """A bootstrap Java project with gradle, TestNG, Mockito, FEST-Assert 2 and Cobertura for Eclipse and Jenkins"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile(
            'com.google.guava:guava:19.+',
            'ch.qos.logback:logback-classic:1.1.3'
    )

    testCompile(
            'org.testng:testng:6.+',
            'org.uncommons:reportng:1.+',
            'org.mockito:mockito-all:2.+',
            'org.easytesting:fest-assert-core:2.+',
            // workaround for a known issue with TestNG 6.x: explicitly add Guice (Gradle will fail to run tests otherwise
            'com.google.inject:guice:4.+'
    )
}

// ensure that test resources (src/test/resources) are added to CLASSPATH;
// see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
// http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
sourceSets {
    main {
        runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
    }
    test {
        runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
    }
}

test {
    useTestNG() {
        suiteXmlBuilder().suite(name: 'gradle-testng-mockito-bootstrap', parallel: 'tests') {
            test(name: 'all-tests') {
                packages {
                    'package'(name: 'com.miguno.*')
                }
            }
        }
    }
    options {
        listeners << 'org.uncommons.reportng.HTMLReporter'
        listeners << 'org.uncommons.reportng.JUnitXMLReporter'
    }
    ext.useDefaultListeners = true
    ext.workingDirectory = 'build/'
}

// https://github.com/stevesaliman/gradle-cobertura-plugin
// http://ingorichter.blogspot.ch/2013/03/using-cobertura-with-gradle.html for list of options
cobertura {
    coverageFormats = ['xml', 'html']
}

// See http://www.gradle.org/docs/current/userguide/gradle_wrapper.html
task wrapper(type: Wrapper) {
    description = 'Install Gradle wrapper'
    gradleVersion = '2.10'
}

mainClassName = "com.miguno.bootstrap.gtm.BobRoss"
